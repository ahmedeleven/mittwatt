{
	"info": {
		"_postman_id": "ec6fb185-3d92-4f5f-b6cd-4c5542246de0",
		"name": "Mittwatt",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20304565",
		"_collection_link": "https://www.postman.com/sushmashinde32/workspace/oauthdetails/collection/20304565-ec6fb185-3d92-4f5f-b6cd-4c5542246de0?action=share&source=collection_link&creator=20304565"
	},
	"item": [
		{
			"name": "getdata",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"var schema = {\r",
							" \"type\": \"array\",\r",
							"\r",
							"    \"definitions\": {\r",
							"        \"WelcomeElement\": {\r",
							"            \"type\": \"object\",\r",
							"            \"additionalProperties\": false,\r",
							"            \"properties\": {\r",
							"                \"result\": {\r",
							"                    \"$ref\": \"#/definitions/Result\"\r",
							"                }\r",
							"            },\r",
							"            \"required\": [\r",
							"                \"result\"\r",
							"            ],\r",
							"            \"title\": \"WelcomeElement\"\r",
							"        },\r",
							"        \"Result\": {\r",
							"            \"type\": \"object\",\r",
							"            \"additionalProperties\": false,\r",
							"            \"properties\": {\r",
							"                \"data\": {\r",
							"                    \"$ref\": \"#/definitions/Data\"\r",
							"                }\r",
							"            },\r",
							"            \"required\": [\r",
							"                \"data\"\r",
							"            ],\r",
							"            \"title\": \"Result\"\r",
							"        },\r",
							"        \"Data\": {\r",
							"            \"type\": \"object\",\r",
							"            \"additionalProperties\": false,\r",
							"            \"properties\": {\r",
							"                \"json\": {\r",
							"                    \"$ref\": \"#/definitions/JSONUnion\"\r",
							"                },\r",
							"                \"meta\": {\r",
							"                    \"$ref\": \"#/definitions/Meta\"\r",
							"                }\r",
							"            },\r",
							"            \"required\": [\r",
							"                \"json\"\r",
							"            ],\r",
							"            \"title\": \"Data\"\r",
							"        },\r",
							"        \"JSONElement\": {\r",
							"            \"type\": \"object\",\r",
							"            \"additionalProperties\": false,\r",
							"            \"properties\": {\r",
							"                \"dateId\": {\r",
							"                    \"type\": \"integer\"\r",
							"                },\r",
							"               \"price\": {\r",
							"                    \"type\": \"number\"\r",
							"                },\r",
							"                \"dateData\": {\r",
							"                    \"$ref\": \"#/definitions/DateData\"\r",
							"                }\r",
							"            },\r",
							"            \"required\": [\r",
							"                \"dateData\",\r",
							"                \"dateId\",\r",
							"                \"price\"\r",
							"            ],\r",
							"            \"title\": \"JSONElement\"\r",
							"        },\r",
							"        \"PurpleJSON\": {\r",
							"            \"type\": \"object\",\r",
							"            \"additionalProperties\": false,\r",
							"            \"properties\": {\r",
							"                \"greeting\": {\r",
							"                    \"type\": \"string\"\r",
							"                }\r",
							"            },\r",
							"            \"required\": [\r",
							"                \"greeting\"\r",
							"            ],\r",
							"            \"title\": \"PurpleJSON\"\r",
							"        },\r",
							"        \"DateData\": {\r",
							"            \"type\": \"object\",\r",
							"            \"additionalProperties\": false,\r",
							"            \"properties\": {\r",
							"                \"dateValue\": {\r",
							"                    \"type\": \"string\",\r",
							"                    \"format\": \"date-time\"\r",
							"                }\r",
							"            },\r",
							"            \"required\": [\r",
							"                \"dateValue\"\r",
							"            ],\r",
							"            \"title\": \"DateData\"\r",
							"        },\r",
							"        \"Meta\": {\r",
							"            \"type\": \"object\",\r",
							"            \"additionalProperties\": false,\r",
							"            \"properties\": {\r",
							"                \"values\": {\r",
							"                    \"type\": \"object\",\r",
							"                    \"additionalProperties\": {\r",
							"                        \"type\": \"array\",\r",
							"                        \"items\": {\r",
							"                            \"$ref\": \"#/definitions/Value\"\r",
							"                        }\r",
							"                    }\r",
							"                }\r",
							"            },\r",
							"            \"required\": [\r",
							"                \"values\"\r",
							"            ],\r",
							"            \"title\": \"Meta\"\r",
							"        },\r",
							"        \"JSONUnion\": {\r",
							"            \"anyOf\": [\r",
							"                {\r",
							"                    \"type\": \"array\",\r",
							"                    \"items\": {\r",
							"                        \"$ref\": \"#/definitions/JSONElement\"\r",
							"                    }\r",
							"                },\r",
							"                {\r",
							"                    \"$ref\": \"#/definitions/PurpleJSON\"\r",
							"                }\r",
							"            ],\r",
							"            \"title\": \"JSONUnion\"\r",
							"        },\r",
							"        \"Value\": {\r",
							"            \"type\": \"string\",\r",
							"            \"enum\": [\r",
							"                \"Date\"\r",
							"            ],\r",
							"            \"title\": \"Value\"\r",
							"        }\r",
							"    }\r",
							"}  \r",
							";\r",
							" \r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"//Test 1 : Validate ResponseStatus code is 200\r",
							"pm.test(\"Validate Response Status Code is 200 \",function()\r",
							"{\r",
							"    pm.response.to.have.status(200);\r",
							"    console.log(jsonData);\r",
							"    pm.expect(jsonData[0].result.data.json).have.property(\"greeting\");\r",
							"    pm.expect(jsonData[0].result.data.json.greeting).to.eql(\"Hello from tRPC\")\r",
							"});\r",
							"\r",
							"// Test 2 : Validate Response Json Schema\r",
							"    pm.test(\"Validate Response schema is valid\",function()\r",
							"{\r",
							"   pm.response.to.have.jsonSchema(schema);\r",
							"});\r",
							"\r",
							"//Test 3 : Validate Headers cookies and responsetime validations  \r",
							"\r",
							"pm.test(\"Validate Headers cookies and responsetime validations \",function()\r",
							"{\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\")\r",
							"    \r",
							"});\r",
							"\r",
							"//Test 3 : Validate the Json responses logic \r",
							"\r",
							"pm.test(\"Validate json response logic \",function()\r",
							"{\r",
							"   if(jsonData[1].result.data.json[0].dateId==3024)\r",
							"    {\r",
							"        pm.expect(jsonData[1].result.data.json[0].price).to.be.a('number');\r",
							"        pm.expect(jsonData[1].result.data.json[0].price).to.be.above(0);\r",
							"        pm.expect(jsonData[1].result.data.json[0].price).to.eql(89.79212866613466);\r",
							"\r",
							"        pm.expect(jsonData[1].result.data.json[0].dateData.dateValue).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/);\r",
							"        pm.expect(jsonData[1].result.data.json[0].dateData.dateValue).to.eql(\"2024-05-05T21:00:00.000Z\");\r",
							"    }   \r",
							"});\r",
							"\r",
							"\r",
							"// Function to validate the structure of each jsonData item\r",
							"function validateItem(item) {\r",
							"    if (Array.isArray(item.result.data.json)) {\r",
							"        item.result.data.json.forEach(subItem => {\r",
							"            // Validate price\r",
							"            pm.expect(subItem.price).to.be.a('number');\r",
							"            pm.expect(subItem.price).to.be.above(0); // Example validation, adjust as needed\r",
							"            \r",
							"            // Validate dateValue\r",
							"            pm.expect(subItem.dateData.dateValue).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$/);\r",
							"        });\r",
							"    }\r",
							"}\r",
							"\r",
							"     // Loop through the response array and validate each item\r",
							"jsonData.forEach(validateItem);\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "useBrowser",
							"value": true,
							"type": "boolean"
						},
						{
							"key": "scope",
							"value": "https://www.googleapis.com/auth/drive",
							"type": "string"
						},
						{
							"key": "accessTokenUrl",
							"value": "https://oauth2.googleapis.com/token",
							"type": "string"
						},
						{
							"key": "authUrl",
							"value": "https://accounts.google.com/o/oauth2/auth",
							"type": "string"
						},
						{
							"key": "redirect_uri",
							"value": "https://oauth.pstmn.io/v1/callback",
							"type": "string"
						},
						{
							"key": "tokenName",
							"value": "Google OAuth Token",
							"type": "string"
						},
						{
							"key": "clientSecret",
							"value": "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",
							"type": "string"
						},
						{
							"key": "clientId",
							"value": "817944121511-4l3hcj13a4vop5g7roc0afsu113gcjl1.apps.googleusercontent.com",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/trpc/post.hello,price.getHistoryDay,price.getForecastDay?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22text%22%3A%22from%20tRPC%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22date%22%3A%7B%22day%22%3A6%2C%22month%22%3A5%2C%22year%22%3A2024%7D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22date%22%3A%7B%22day%22%3A8%2C%22month%22%3A5%2C%22year%22%3A2024%7D%7D%7D%7D",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"trpc",
						"post.hello,price.getHistoryDay,price.getForecastDay"
					],
					"query": [
						{
							"key": "batch",
							"value": "1"
						},
						{
							"key": "input",
							"value": "%7B%220%22%3A%7B%22json%22%3A%7B%22text%22%3A%22from%20tRPC%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22date%22%3A%7B%22day%22%3A6%2C%22month%22%3A5%2C%22year%22%3A2024%7D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22date%22%3A%7B%22day%22%3A8%2C%22month%22%3A5%2C%22year%22%3A2024%7D%7D%7D%7D"
						}
					]
				}
			},
			"response": []
		}
	]
}